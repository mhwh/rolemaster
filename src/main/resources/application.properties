# Configuration file
# key = value
%dev.quarkus.log.level=INFO
%prod.quarkus.log.level=INFO

quarkus.log.console.enable=true
quarkus.log.console.format=%d{HH:mm:ss} %-5p [%c{2.}] (%t) %s%e%n
%dev.quarkus.log.console.level=INFO
%prod.quarkus.log.console.level=INFO
quarkus.log.console.color=false

%dev.quarkus.log.category."dk.hejselbak.rolemaster".level=DEBUG
%dev.quarkus.log.console."dk.hejselbak.rolemaster".level=DEBUG
%prod.quarkus.log.category."dk.hejselbak.rolemaster".level=INFO

quarkus.swagger-ui.always-include=true
quarkus.swagger-ui.path=/swagger-ui

########### configure your datasource
##### The Postgres settings PRODUCTION
%prod.quarkus.datasource.db-kind = postgresql
%prod.quarkus.datasource.username = postgres
%prod.quarkus.datasource.password = postgres
%prod.quarkus.datasource.jdbc.max-size=16
%prod.quarkus.datasource.jdbc.url = jdbc:postgresql://rolemaster_db:5432/rolemaster_db
# As this application is meant to start on an empty postgres database, everything is created on startup using the import.sql script
%prod.quarkus.hibernate-orm.database.generation=drop-and-create
## In dev and test modes, it defaults to import.sql. In production mode, it defaults to no-file.
quarkus.hibernate-orm.sql-load-script=import.sql


%dev.quarkus.datasource.db-kind=h2
%dev.quarkus.datasource.jdbc.url=jdbc:h2:mem:test
## %dev.quarkus.datasource.jdbc.url = jdbc:postgresql://localhost:5432/rolemaster_db
%dev.quarkus.datasource.jdbc.driver=org.h2.Driver
%dev.quarkus.datasource.username=username-default
%dev.quarkus.datasource.jdbc.max-size=13
%dev.quarkus.hibernate-orm.database.generation=create


## General DB settings
quarkus.hibernate-orm.log.jdbc-warnings=true
quarkus.hibernate-orm.log.sql=true

# Configuration file
quarkus.http.port=9000
quarkus.http.cors=true
# quarkus.http.origins=http://localhost, http://localhost:9000
# quarkus.http.headers=accept, authorization, content-type, x-requested-with
# quarkus.http.methods=GET, OPTIONS