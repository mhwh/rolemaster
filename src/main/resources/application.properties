# Configuration file
# key = value
quarkus.log.console.enable=true
quarkus.log.console.format=%d{HH:mm:ss} %-5p [%c{2.}] (%t) %s%e%n
quarkus.log.console.level=DEBUG
quarkus.log.console.color=false

quarkus.log.category."dk.hejselbak.rolemaster".level=DEBUG

quarkus.swagger-ui.always-include=true
quarkus.swagger-ui.path=/swagger-ui

########### configure your datasource
## H2 data source. Remember to include the H2 driver in the pom, if you are to use this!
## <dependency>
##   <groupId>io.quarkus</groupId>
##   <artifactId>quarkus-jdbc-h2</artifactId>
## </dependency>
#quarkus.datasource.url=jdbc:h2:mem:default
#quarkus.datasource.driver=org.h2.Driver
#quarkus.datasource.username=username-default
#quarkus.hibernate-orm.database.generation=create

##### The Postgres settings
quarkus.datasource.db-kind = postgresql
quarkus.datasource.username = postgres
quarkus.datasource.password = postgres
quarkus.datasource.jdbc.url = jdbc:postgresql://rolemaster_db:5432/rolemaster_db
# As this application is meant to start on an empty postgres database, everything is created on startup using the import.sql script
quarkus.hibernate-orm.database.generation=drop-and-create
## In dev and test modes, it defaults to import.sql. In production mode, it defaults to no-file.
quarkus.hibernate-orm.sql-load-script=import.sql

## General DB settings
quarkus.hibernate-orm.log.jdbc-warnings=true
quarkus.hibernate-orm.log.sql=false

# Configuration file
quarkus.http.port=9000
quarkus.http.cors=true
# quarkus.http.origins=http://localhost, http://localhost:9000
# quarkus.http.headers=accept, authorization, content-type, x-requested-with
# quarkus.http.methods=GET, OPTIONS